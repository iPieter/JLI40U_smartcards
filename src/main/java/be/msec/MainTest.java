package be.msec;

import org.junit.Test;

import static org.junit.Assert.*;

/**
 * @author Pieter
 * @version 1.0
 */
public class MainTest
{
    @Test
    public void getSubjectName() throws Exception
    {
        byte[] input = {48, -126, 1, -126, -96, 3, 2, 1, 2, 2, 4, 106, 17, -42, -46, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 5, 5, 0, 48, 15, 49, 13, 48, 11, 6, 3, 85, 4, 3, 19, 4, 82, 79, 79, 84, 48, 30, 23, 13, 49, 56, 48, 52, 49, 50, 48, 57, 48, 48, 53, 54, 90, 23, 13, 49, 56, 48, 53, 49, 51, 48, 57, 48, 48, 53, 54, 90, 48, 15, 49, 13, 48, 11, 6, 3, 85, 4, 3, 19, 4, 84, 73, 77, 69, 48, -126, 1, 34, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 1, 5, 0, 3, -126, 1, 15, 0, 48, -126, 1, 10, 2, -126, 1, 1, 0, -116, 35, -92, 85, 71, 55, -43, 71, -69, 111, 122, -103, -61, -6, 95, -29, -126, -91, -79, 0, 61, 42, 27, -88, 38, -91, 23, 42, -116, -60, 118, -111, -3, -120, -8, 116, 10, 92, 75, -82, -81, -2, -111, -24, -59, -18, -47, 61, -71, -89, -96, -109, 76, 84, 57, 87, -89, -32, 124, -74, -41, -74, 19, -3, -122, 20, 27, 115, 57, -123, 2, -15, 39, 97, 51, -1, -15, 123, -9, 127, -93, 85, 107, -26, 71, -67, -29, -86, 35, -18, -105, -109, -41, -40, 11, 28, -49, 85, -76, -10, 5, -105, -22, 22, 4, 59, -7, 23, -110, 12, 19, -114, 107, 48, 66, -32, -45, 2, -105, 78, -67, -51, 87, 3, -29, -101, -36, -29, 2, -14, 47, -69, -95, -113, 7, -14, 107, 66, -81, 69, -80, -63, -37, 36, 88, -110, 91, -31, 91, -33, -19, 125, 65, -36, 55, 41, -48, 9, -31, 36, 66, 100, 10, 45, 55, -114, -60, -51, -13, -79, 3, -31, 114, 17, -7, -6, -82, 100, -79, 119, -27, 80, -80, -109, 38, 48, -101, -28, -47, 57, 106, -5, 103, -35, -72, 126, 101, 98, -33, -1, -65, -112, 106, -84, 83, -18, 99, 84, 107, -83, 100, -62, 11, -46, 73, -41, -17, 73, -28, 86, 12, 20, -61, 120, -51, 84, -21, -89, 51, 98, 60, -73, -65, -100, -88, -98, 72, 5, -115, -80, 123, 53, 32, -78, -49, 33, -27, 0, 78, -104, -110, -57, 9, 90, 2, -97, 2, 3, 1, 0, 1};
        byte[] expct = {84, 73, 77, 69};

        assertArrayEquals(  expct, Main.getSubjectName( input, (short) 294 ) );
    }

    @Test
    public void getPublicKey() throws Exception
    {
        byte[] input = {48, -126, 1, -126, -96, 3, 2, 1, 2, 2, 4, 106, 17, -42, -46, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 5, 5, 0, 48, 15, 49, 13, 48, 11, 6, 3, 85, 4, 3, 19, 4, 82, 79, 79, 84, 48, 30, 23, 13, 49, 56, 48, 52, 49, 50, 48, 57, 48, 48, 53, 54, 90, 23, 13, 49, 56, 48, 53, 49, 51, 48, 57, 48, 48, 53, 54, 90, 48, 15, 49, 13, 48, 11, 6, 3, 85, 4, 3, 19, 4, 84, 73, 77, 69, 48, -126, 1, 34, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 1, 5, 0, 3, -126, 1, 15, 0, 48, -126, 1, 10, 2, -126, 1, 1, 0, -116, 35, -92, 85, 71, 55, -43, 71, -69, 111, 122, -103, -61, -6, 95, -29, -126, -91, -79, 0, 61, 42, 27, -88, 38, -91, 23, 42, -116, -60, 118, -111, -3, -120, -8, 116, 10, 92, 75, -82, -81, -2, -111, -24, -59, -18, -47, 61, -71, -89, -96, -109, 76, 84, 57, 87, -89, -32, 124, -74, -41, -74, 19, -3, -122, 20, 27, 115, 57, -123, 2, -15, 39, 97, 51, -1, -15, 123, -9, 127, -93, 85, 107, -26, 71, -67, -29, -86, 35, -18, -105, -109, -41, -40, 11, 28, -49, 85, -76, -10, 5, -105, -22, 22, 4, 59, -7, 23, -110, 12, 19, -114, 107, 48, 66, -32, -45, 2, -105, 78, -67, -51, 87, 3, -29, -101, -36, -29, 2, -14, 47, -69, -95, -113, 7, -14, 107, 66, -81, 69, -80, -63, -37, 36, 88, -110, 91, -31, 91, -33, -19, 125, 65, -36, 55, 41, -48, 9, -31, 36, 66, 100, 10, 45, 55, -114, -60, -51, -13, -79, 3, -31, 114, 17, -7, -6, -82, 100, -79, 119, -27, 80, -80, -109, 38, 48, -101, -28, -47, 57, 106, -5, 103, -35, -72, 126, 101, 98, -33, -1, -65, -112, 106, -84, 83, -18, 99, 84, 107, -83, 100, -62, 11, -46, 73, -41, -17, 73, -28, 86, 12, 20, -61, 120, -51, 84, -21, -89, 51, 98, 60, -73, -65, -100, -88, -98, 72, 5, -115, -80, 123, 53, 32, -78, -49, 33, -27, 0, 78, -104, -110, -57, 9, 90, 2, -97, 2, 3, 1, 0, 1};
        byte[] expct = {48, -126, 1, 34, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 1, 5, 0, 3, -126, 1, 15, 0, 48, -126, 1, 10, 2, -126, 1, 1, 0, -116, 35, -92, 85, 71, 55, -43, 71, -69, 111, 122, -103, -61, -6, 95, -29, -126, -91, -79, 0, 61, 42, 27, -88, 38, -91, 23, 42, -116, -60, 118, -111, -3, -120, -8, 116, 10, 92, 75, -82, -81, -2, -111, -24, -59, -18, -47, 61, -71, -89, -96, -109, 76, 84, 57, 87, -89, -32, 124, -74, -41, -74, 19, -3, -122, 20, 27, 115, 57, -123, 2, -15, 39, 97, 51, -1, -15, 123, -9, 127, -93, 85, 107, -26, 71, -67, -29, -86, 35, -18, -105, -109, -41, -40, 11, 28, -49, 85, -76, -10, 5, -105, -22, 22, 4, 59, -7, 23, -110, 12, 19, -114, 107, 48, 66, -32, -45, 2, -105, 78, -67, -51, 87, 3, -29, -101, -36, -29, 2, -14, 47, -69, -95, -113, 7, -14, 107, 66, -81, 69, -80, -63, -37, 36, 88, -110, 91, -31, 91, -33, -19, 125, 65, -36, 55, 41, -48, 9, -31, 36, 66, 100, 10, 45, 55, -114, -60, -51, -13, -79, 3, -31, 114, 17, -7, -6, -82, 100, -79, 119, -27, 80, -80, -109, 38, 48, -101, -28, -47, 57, 106, -5, 103, -35, -72, 126, 101, 98, -33, -1, -65, -112, 106, -84, 83, -18, 99, 84, 107, -83, 100, -62, 11, -46, 73, -41, -17, 73, -28, 86, 12, 20, -61, 120, -51, 84, -21, -89, 51, 98, 60, -73, -65, -100, -88, -98, 72, 5, -115, -80, 123, 53, 32, -78, -49, 33, -27, 0, 78, -104, -110, -57, 9, 90, 2, -97, 2, 3, 1, 0, 1};

        assertArrayEquals(  expct, Main.getPublicKey( input, (short) 294 ) );
    }

}